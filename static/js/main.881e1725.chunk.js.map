{"version":3,"sources":["types/index.tsx","components/ExportAndImport.tsx","utils/index.tsx","constants/index.tsx","components/NumberDisplay.tsx","components/Button.tsx","components/Minesweeper.tsx","components/Table.tsx","components/App.tsx","serviceWorker.js","index.js"],"names":["CellValue","CellState","Face","CryptoJS","require","ExportAndImport","data","owner","games","id","time","encryptionGame","cryptoText","AES","encrypt","JSON","stringify","toString","console","log","onClick","decryptedData","parse","decrypt","enc","Utf8","grabAllAbjectnessCells","cells","rowParam","colParam","topLeftCell","topCell","topRightCell","MAX_COLS","leftCell","rightCell","bottomLeftCell","MAX_ROWS","bottomCell","bottomRightCell","generateCells","row","push","col","value","none","state","open","cells2","numberOfBombs","bombPlaced","randomRow","Math","floor","random","randomCol","bomb","map","rowIndex","cell","colIndex","generateBombs","currentCell","NumberDisplay","className","abs","padStart","Button","onContext","red","live","hesDie","useState","prevClickType","setPrevClickType","useEffect","timer","setInterval","clearInterval","style","padding","margin","visible","onContextMenu","flagged","height","width","genCells","cells1","bombCounter","App","setCells","smile","face","setFace","setTime","setLive","setBombCounter","hesLost","setHesLost","hesWon","setHesWon","handleMouseDownAndUp","e","target","startsWith","type","oh","window","addEventListener","removeEventListener","showAllBombs","useCallback","slice","bombs","lost","won","setVisibleAroundMe","res","nFlags","nFBombs","nFBombsArr","i","j","nBombs","distinct","length","indexOf","forEach","el","nBingo","checkBombsAroundMe","handleCellClick","fromReval","newCells","openMultipleCells","checkWin","getSafeOpenCellsExist","numberOfOpenCells","existNotOpenBombs","wrongBombs","rows","handleCellRightClick","preventDefault","currentCells","role","aria-label","gridTemplateColumns","gridTemplateRows","cellIndex","key","Table2","ownerId","ownerName","setData","filterFields","setFilterFields","loading","setLoading","sortTime","setSortTime","getAllGames","axios","get","then","response","allGames","newData","newFilterFields","game","gameToAdd","date","newFf","text","findIndex","catch","alert","fff","columns","title","dataIndex","filters","onFilter","record","defaultFilteredValue","sorter","a","b","sortOrder","dataSource","elIndex","align","direction","Text","showSorterTooltip","bordered","size","onChange","a1","a2","a3","a4","action","pagination","position","display","flexDirection","gamesForId","Table","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.881e1725.chunk.js","sourcesContent":["export enum CellValue {\r\n  none,\r\n  one,\r\n  two,\r\n  three,\r\n  four,\r\n  five,\r\n  six,\r\n  seven,\r\n  eight,\r\n  bomb,\r\n}\r\n\r\nexport enum CellState {\r\n  open,\r\n  visible,\r\n  flagged,\r\n}\r\n\r\nexport type Cell = {\r\n  value: CellValue;\r\n  state: CellState;\r\n  red?: boolean;\r\n};\r\n\r\nexport enum Face {\r\n  smile = \"😁\",\r\n  oh = \"😮\",\r\n  lost = \"😵\",\r\n  won = \"😎\",\r\n}\r\n","import React from \"react\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst ExportAndImport: React.FC = () => {\r\n  let data = {\r\n    owner: \"rame\",\r\n    games: [{ id: 1, time: 0 }],\r\n  };\r\n\r\n  const encryptionGame = () => {\r\n    let cryptoText = CryptoJS.AES.encrypt(\r\n      JSON.stringify(data),\r\n      data.owner\r\n    ).toString();\r\n    console.log(\"enc\", cryptoText);\r\n    return cryptoText;\r\n  };\r\n  const decryptionGame = () => {\r\n    let cryptoText = encryptionGame();\r\n\r\n    var decryptedData = JSON.parse(\r\n      CryptoJS.AES.decrypt(cryptoText, data.owner).toString(CryptoJS.enc.Utf8)\r\n    );\r\n    console.log(decryptedData);\r\n  };\r\n  return (\r\n    <>\r\n      <button onClick={encryptionGame}>Export</button>\r\n      <button onClick={decryptionGame}>Import</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportAndImport;\r\n","import { MAX_ROWS, MAX_COLS, NO_OF_BOMBS } from \"../constants\";\r\nimport { Cell, CellState, CellValue } from \"../types\";\r\n\r\nconst generateBombs = (\r\n  cells2: Cell[][],\r\n  numberOfBombs: number = NO_OF_BOMBS\r\n) => {\r\n  let cells = [...cells2];\r\n  let bombPlaced = 0;\r\n\r\n  while (bombPlaced < numberOfBombs) {\r\n    let randomRow = Math.floor(Math.random() * MAX_ROWS);\r\n    let randomCol = Math.floor(Math.random() * MAX_COLS);\r\n    const currentCell = cells[randomRow][randomCol];\r\n\r\n    if (currentCell.value !== CellValue.bomb) {\r\n      cells = cells.map((row, rowIndex) =>\r\n        row.map((cell, colIndex) => {\r\n          if (randomRow === rowIndex && randomCol === colIndex) {\r\n            return { ...cell, value: CellValue.bomb };\r\n          } else {\r\n            return cell;\r\n          }\r\n        })\r\n      );\r\n      bombPlaced++;\r\n    }\r\n  }\r\n  return cells;\r\n};\r\n\r\nconst grabAllAbjectnessCells = (\r\n  cells: Cell[][],\r\n  rowParam: number,\r\n  colParam: number\r\n): {\r\n  topLeftCell: Cell | null;\r\n  topCell: Cell | null;\r\n  topRightCell: Cell | null;\r\n  leftCell: Cell | null;\r\n  rightCell: Cell | null;\r\n  bottomLeftCell: Cell | null;\r\n  bottomCell: Cell | null;\r\n  bottomRightCell: Cell | null;\r\n} => {\r\n  const topLeftCell =\r\n    rowParam > 0 && colParam > 0 ? cells[rowParam - 1][colParam - 1] : null;\r\n  const topCell = rowParam > 0 ? cells[rowParam - 1][colParam] : null;\r\n  const topRightCell =\r\n    rowParam > 0 && colParam < MAX_COLS - 1\r\n      ? cells[rowParam - 1][colParam + 1]\r\n      : null;\r\n  const leftCell = colParam > 0 ? cells[rowParam][colParam - 1] : null;\r\n  const rightCell =\r\n    colParam < MAX_COLS - 1 ? cells[rowParam][colParam + 1] : null;\r\n  const bottomLeftCell =\r\n    rowParam < MAX_ROWS - 1 && colParam > 0\r\n      ? cells[rowParam + 1][colParam - 1]\r\n      : null;\r\n  const bottomCell =\r\n    rowParam < MAX_ROWS - 1 && rowParam < MAX_ROWS - 1\r\n      ? cells[rowParam + 1][colParam]\r\n      : null;\r\n  const bottomRightCell =\r\n    rowParam < MAX_ROWS - 1 && colParam < MAX_COLS - 1\r\n      ? cells[rowParam + 1][colParam + 1]\r\n      : null;\r\n  return {\r\n    topLeftCell,\r\n    topCell,\r\n    topRightCell,\r\n    leftCell,\r\n    rightCell,\r\n    bottomLeftCell,\r\n    bottomCell,\r\n    bottomRightCell,\r\n  };\r\n};\r\n\r\nexport const generateCells = (): Cell[][] => {\r\n  let cells: Cell[][] = [];\r\n  // Generate all Cells\r\n  for (let row = 0; row < MAX_ROWS; row++) {\r\n    cells.push([]);\r\n    for (let col = 0; col < MAX_COLS; col++) {\r\n      cells[row].push({ value: CellValue.none, state: CellState.open });\r\n    }\r\n  }\r\n\r\n  // Randomly put 10 bombs\r\n  cells = generateBombs(cells, NO_OF_BOMBS);\r\n\r\n  // Calculate the number for each cell\r\n  for (let rowIndex = 0; rowIndex < MAX_ROWS; rowIndex++) {\r\n    for (let colIndex = 0; colIndex < MAX_COLS; colIndex++) {\r\n      const currentCell = cells[rowIndex][colIndex];\r\n      if (currentCell.value === CellValue.bomb) {\r\n        continue;\r\n      }\r\n\r\n      let numberOfBombs = 0;\r\n      const {\r\n        topLeftCell,\r\n        topCell,\r\n        topRightCell,\r\n        leftCell,\r\n        rightCell,\r\n        bottomLeftCell,\r\n        bottomCell,\r\n        bottomRightCell,\r\n      } = grabAllAbjectnessCells(cells, rowIndex, colIndex);\r\n\r\n      if (topLeftCell?.value === CellValue.bomb) numberOfBombs++;\r\n      if (topCell?.value === CellValue.bomb) numberOfBombs++;\r\n      if (topRightCell?.value === CellValue.bomb) numberOfBombs++;\r\n      if (leftCell?.value === CellValue.bomb) numberOfBombs++;\r\n      if (rightCell?.value === CellValue.bomb) numberOfBombs++;\r\n      if (bottomLeftCell?.value === CellValue.bomb) numberOfBombs++;\r\n      if (bottomCell?.value === CellValue.bomb) numberOfBombs++;\r\n      if (bottomRightCell?.value === CellValue.bomb) numberOfBombs++;\r\n\r\n      if (numberOfBombs > 0) {\r\n        cells[rowIndex][colIndex] = {\r\n          ...currentCell,\r\n          value: numberOfBombs,\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  return cells;\r\n};\r\n\r\nexport const openMultipleCells = (\r\n  cells: Cell[][],\r\n  rowParam: number,\r\n  colParam: number\r\n): Cell[][] => {\r\n  let currentCell = cells[rowParam][colParam];\r\n  if (\r\n    currentCell.state === CellState.visible ||\r\n    currentCell.state === CellState.flagged\r\n  ) {\r\n    return cells;\r\n  }\r\n  let newCells: Cell[][] = cells.slice();\r\n  newCells[rowParam][colParam].state = CellState.visible;\r\n\r\n  const {\r\n    topLeftCell,\r\n    topCell,\r\n    topRightCell,\r\n    leftCell,\r\n    rightCell,\r\n    bottomLeftCell,\r\n    bottomCell,\r\n    bottomRightCell,\r\n  } = grabAllAbjectnessCells(cells, rowParam, colParam);\r\n\r\n  if (\r\n    topLeftCell?.state === CellState.open &&\r\n    topLeftCell.value !== CellValue.bomb\r\n  ) {\r\n    topLeftCell.value === CellValue.none\r\n      ? (newCells = openMultipleCells(newCells, rowParam - 1, colParam - 1))\r\n      : (newCells[rowParam - 1][colParam - 1].state = CellState.visible);\r\n  }\r\n\r\n  if (topCell?.state === CellState.open && topCell.value !== CellValue.bomb) {\r\n    topCell.value === CellValue.none\r\n      ? (newCells = openMultipleCells(newCells, rowParam - 1, colParam))\r\n      : (newCells[rowParam - 1][colParam].state = CellState.visible);\r\n  }\r\n\r\n  if (\r\n    topRightCell?.state === CellState.open &&\r\n    topRightCell.value !== CellValue.bomb\r\n  ) {\r\n    topRightCell.value === CellValue.none\r\n      ? (newCells = openMultipleCells(newCells, rowParam - 1, colParam + 1))\r\n      : (newCells[rowParam - 1][colParam + 1].state = CellState.visible);\r\n  }\r\n\r\n  if (leftCell?.state === CellState.open && leftCell.value !== CellValue.bomb) {\r\n    leftCell.value === CellValue.none\r\n      ? (newCells = openMultipleCells(newCells, rowParam, colParam - 1))\r\n      : (newCells[rowParam][colParam - 1].state = CellState.visible);\r\n  }\r\n\r\n  if (\r\n    rightCell?.state === CellState.open &&\r\n    rightCell.value !== CellValue.bomb\r\n  ) {\r\n    rightCell.value === CellValue.none\r\n      ? (newCells = openMultipleCells(newCells, rowParam, colParam + 1))\r\n      : (newCells[rowParam][colParam + 1].state = CellState.visible);\r\n  }\r\n\r\n  if (\r\n    bottomLeftCell?.state === CellState.open &&\r\n    bottomLeftCell.value !== CellValue.bomb\r\n  ) {\r\n    bottomLeftCell.value === CellValue.none\r\n      ? (newCells = openMultipleCells(newCells, rowParam + 1, colParam - 1))\r\n      : (newCells[rowParam + 1][colParam - 1].state = CellState.visible);\r\n  }\r\n\r\n  if (\r\n    bottomCell?.state === CellState.open &&\r\n    bottomCell.value !== CellValue.bomb\r\n  ) {\r\n    bottomCell.value === CellValue.none\r\n      ? (newCells = openMultipleCells(newCells, rowParam + 1, colParam))\r\n      : (newCells[rowParam + 1][colParam].state = CellState.visible);\r\n  }\r\n\r\n  if (\r\n    bottomRightCell?.state === CellState.open &&\r\n    bottomRightCell.value !== CellValue.bomb\r\n  ) {\r\n    bottomRightCell.value === CellValue.none\r\n      ? (newCells = openMultipleCells(newCells, rowParam + 1, colParam + 1))\r\n      : (newCells[rowParam + 1][colParam + 1].state = CellState.visible);\r\n  }\r\n\r\n  return newCells;\r\n};\r\n","export let MAX_ROWS = 9;\r\nexport let MAX_COLS = 9;\r\nexport let NO_OF_BOMBS = 10;\r\n","import React from \"react\";\r\nimport \"../styles/NumberDisplay.scss\";\r\n\r\ninterface NumberDisplayProps {\r\n  value: number;\r\n}\r\n\r\nconst NumberDisplay: React.FC<NumberDisplayProps> = ({ value }) => {\r\n  return (\r\n    <div className=\"NumberDisplay\">\r\n      <span>\r\n        {value < 0\r\n          ? `-${Math.abs(value).toString().padStart(2, \"0\")}`\r\n          : value.toString().padStart(3, \"0\")}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NumberDisplay;\r\n","// eslint-disable-next-line\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { CellState, CellValue } from \"../types\";\r\nimport \"../styles/Button.scss\";\r\n\r\nconst Button: React.FC<{\r\n  row: number;\r\n  col: number;\r\n  state: CellState;\r\n  value: CellValue;\r\n  live: boolean;\r\n  red?: boolean;\r\n  hesDie: boolean;\r\n  onClick(rowParam: number, colParam: number): (...args: any[]) => void;\r\n  onContext(rowParam: number, colParam: number): (...args: any[]) => void;\r\n}> = ({ state, value, row, col, onClick, onContext, red, live, hesDie }) => {\r\n  const renderContent = (): React.ReactNode => {\r\n    if (state === CellState.flagged && value === CellValue.bomb) {\r\n      return (\r\n        <div style={{ height: \"100%\", width: \"100%\" }} className={`flag`} />\r\n      );\r\n    }\r\n    if (state === CellState.flagged && value !== CellValue.bomb) {\r\n      return (\r\n        <div\r\n          style={{ height: \"100%\", width: \"100%\" }}\r\n          className={`${live ? \"flag\" : \"wrong-bomb\"}`}\r\n        />\r\n      );\r\n    }\r\n    if (value === CellValue.bomb && state === CellState.visible) {\r\n      return (\r\n        <div\r\n          style={{ height: \"100%\", width: \"100%\" }}\r\n          className={`bomb${red ? \"-red\" : \"\"}`}\r\n        />\r\n      );\r\n    }\r\n    // return value;\r\n    // eslint-disable-next-line\r\n    if (\r\n      value !== CellValue.bomb &&\r\n      value !== CellValue.none &&\r\n      state === CellState.visible\r\n    ) {\r\n      return value;\r\n    }\r\n    return null;\r\n    // return value;\r\n  };\r\n  const [prevClickType, setPrevClickType] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setPrevClickType(\"\");\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [prevClickType]);\r\n\r\n  return (\r\n    <button\r\n      style={{ padding: 0, margin: 0 }}\r\n      className={`Button ${\r\n        state === CellState.visible ? \"visible\" : \"\"\r\n      } value-${value} ${live ? \"live\" : \"\"}`}\r\n      onContextMenu={onContext(row, col)}\r\n      onClick={!hesDie ? onClick(row, col) : () => {}}\r\n    >\r\n      {renderContent()}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Cell, CellState, CellValue, Face } from \"../types\";\r\nimport { generateCells, openMultipleCells } from \"../utils\";\r\nimport NumberDisplay from \"./NumberDisplay\";\r\nimport Button from \"./Button\";\r\nimport \"../styles/Minesweeper.scss\";\r\nimport { MAX_COLS, MAX_ROWS, NO_OF_BOMBS } from \"../constants\";\r\n\r\nlet genCells = () => {\r\n  // eslint-disable-next-line\r\n  let cells1 = {\r\n    cells: generateCells(),\r\n    bombCounter: NO_OF_BOMBS,\r\n    live: false,\r\n    time: 0,\r\n  };\r\n  // eslint-disable-next-line\r\n  let cells2 = {\r\n    str: `[[{\"value\":0,\"state\":0},{\"value\":0,\"state\":0},{\"value\":1,\"state\":0},{\"value\":9,\"state\":0},{\"value\":1,\"state\":0},{\"value\":0,\"state\":0},{\"value\":0,\"state\":0},{\"value\":0,\"state\":0},{\"value\":0,\"state\":0}],[{\"value\":0,\"state\":0},{\"value\":0,\"state\":0},{\"value\":1,\"state\":0},{\"value\":1,\"state\":0},{\"value\":1,\"state\":0},{\"value\":0,\"state\":0},{\"value\":0,\"state\":0},{\"value\":0,\"state\":0},{\"value\":0,\"state\":0}],[{\"value\":0,\"state\":0},{\"value\":0,\"state\":0},{\"value\":0,\"state\":0},{\"value\":0,\"state\":0},{\"value\":0,\"state\":0},{\"value\":0,\"state\":0},{\"value\":0,\"state\":0},{\"value\":1,\"state\":0},{\"value\":1,\"state\":0}],[{\"value\":1,\"state\":0},{\"value\":2,\"state\":0},{\"value\":2,\"state\":0},{\"value\":2,\"state\":0},{\"value\":1,\"state\":0},{\"value\":1,\"state\":0},{\"value\":0,\"state\":0},{\"value\":1,\"state\":0},{\"value\":9,\"state\":0}],[{\"value\":2,\"state\":0},{\"value\":9,\"state\":0},{\"value\":9,\"state\":0},{\"value\":2,\"state\":0},{\"value\":9,\"state\":0},{\"value\":1,\"state\":0},{\"value\":0,\"state\":0},{\"value\":1,\"state\":0},{\"value\":1,\"state\":0}],[{\"value\":9,\"state\":0},{\"value\":3,\"state\":0},{\"value\":2,\"state\":0},{\"value\":2,\"state\":0},{\"value\":1,\"state\":0},{\"value\":2,\"state\":0},{\"value\":1,\"state\":0},{\"value\":1,\"state\":0},{\"value\":0,\"state\":0}],[{\"value\":1,\"state\":0},{\"value\":1,\"state\":0},{\"value\":0,\"state\":0},{\"value\":0,\"state\":0},{\"value\":0,\"state\":0},{\"value\":1,\"state\":0},{\"value\":9,\"state\":0},{\"value\":2,\"state\":0},{\"value\":1,\"state\":0}],[{\"value\":1,\"state\":0},{\"value\":1,\"state\":0},{\"value\":0,\"state\":0},{\"value\":0,\"state\":0},{\"value\":0,\"state\":0},{\"value\":1,\"state\":0},{\"value\":2,\"state\":0},{\"value\":3,\"state\":0},{\"value\":9,\"state\":0}],[{\"value\":9,\"state\":0},{\"value\":1,\"state\":0},{\"value\":0,\"state\":0},{\"value\":0,\"state\":0},{\"value\":0,\"state\":0},{\"value\":0,\"state\":0},{\"value\":1,\"state\":0},{\"value\":9,\"state\":0},{\"value\":2,\"state\":0}]]`,\r\n    bombs: 9,\r\n  };\r\n  // eslint-disable-next-line\r\n  let cells3 = {\r\n    str: `[[{\"value\":0,\"state\":0},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":9,\"state\":2},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1}],[{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1}],[{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1}],[{\"value\":1,\"state\":1},{\"value\":2,\"state\":1},{\"value\":2,\"state\":1},{\"value\":2,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":9,\"state\":2}],[{\"value\":2,\"state\":0},{\"value\":9,\"state\":0},{\"value\":9,\"state\":0},{\"value\":2,\"state\":0},{\"value\":9,\"state\":0},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1}],[{\"value\":9,\"state\":0},{\"value\":3,\"state\":1},{\"value\":2,\"state\":1},{\"value\":2,\"state\":1},{\"value\":1,\"state\":1},{\"value\":2,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1}],[{\"value\":1,\"state\":0},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":9,\"state\":0},{\"value\":2,\"state\":1},{\"value\":1,\"state\":1}],[{\"value\":1,\"state\":0},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":2,\"state\":1},{\"value\":3,\"state\":0},{\"value\":9,\"state\":2}],[{\"value\":9,\"state\":0},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":9,\"state\":0},{\"value\":2,\"state\":0}]]`,\r\n    bombs: 9,\r\n  };\r\n  // eslint-disable-next-line\r\n  let cells4 = {\r\n    str: `[[{\"value\":0,\"state\":0},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":9,\"state\":2},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1}],[{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1}],[{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1}],[{\"value\":1,\"state\":1},{\"value\":2,\"state\":1},{\"value\":2,\"state\":1},{\"value\":2,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":9,\"state\":2}],[{\"value\":2,\"state\":1},{\"value\":9,\"state\":2},{\"value\":9,\"state\":2},{\"value\":2,\"state\":1},{\"value\":9,\"state\":2},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1}],[{\"value\":9,\"state\":2},{\"value\":3,\"state\":1},{\"value\":2,\"state\":1},{\"value\":2,\"state\":1},{\"value\":1,\"state\":1},{\"value\":2,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1}],[{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":9,\"state\":2},{\"value\":2,\"state\":1},{\"value\":1,\"state\":1}],[{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":2,\"state\":1},{\"value\":3,\"state\":1},{\"value\":9,\"state\":2}],[{\"value\":9,\"state\":2},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":9,\"state\":0},{\"value\":2,\"state\":0}]]`,\r\n    bombs: 9,\r\n  };\r\n\r\n  // eslint-disable-next-line\r\n  let cells5: {\r\n    time: number;\r\n    live: boolean;\r\n    cells: Cell[][];\r\n    bombCounter: number;\r\n  } = JSON.parse(\r\n    `{\"time\":54,\"live\":true,\"bombCounter\":1,\"cells\":[[{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1}],[{\"value\":1,\"state\":1},{\"value\":9,\"state\":2},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1}],[{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":2,\"state\":1},{\"value\":1,\"state\":1}],[{\"value\":1,\"state\":1},{\"value\":1,\"state\":0},{\"value\":2,\"state\":1},{\"value\":2,\"state\":1},{\"value\":2,\"state\":1},{\"value\":2,\"state\":1},{\"value\":9,\"state\":2},{\"value\":2,\"state\":1},{\"value\":9,\"state\":2}],[{\"value\":2,\"state\":1},{\"value\":9,\"state\":0},{\"value\":2,\"state\":1},{\"value\":9,\"state\":2},{\"value\":9,\"state\":2},{\"value\":2,\"state\":1},{\"value\":1,\"state\":1},{\"value\":2,\"state\":1},{\"value\":1,\"state\":1}],[{\"value\":9,\"state\":2},{\"value\":2,\"state\":1},{\"value\":3,\"state\":1},{\"value\":3,\"state\":1},{\"value\":3,\"state\":1},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1}],[{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":9,\"state\":2},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":2,\"state\":1},{\"value\":9,\"state\":2}],[{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":9,\"state\":2},{\"value\":2,\"state\":1},{\"value\":1,\"state\":1}],[{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":0,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":1,\"state\":1},{\"value\":0,\"state\":1}]]}`\r\n  );\r\n\r\n  let { time, live, cells, bombCounter } = cells1;\r\n  // let { time, live, cells, bombCounter } = cells5;\r\n\r\n  let res = {\r\n    cells: cells,\r\n    time,\r\n    live,\r\n    bombCounter,\r\n  };\r\n\r\n  return res;\r\n};\r\n\r\nconst App: React.FC = () => {\r\n  // const [cells, setCells] = useState<Cell[][]>(generateCells());\r\n  const [cells, setCells] = useState<Cell[][]>(genCells().cells);\r\n  const [face, setFace] = useState<Face>(Face.smile);\r\n  const [time, setTime] = useState<number>(genCells().time);\r\n  const [live, setLive] = useState<boolean>(genCells().live);\r\n  const [bombCounter, setBombCounter] = useState<number>(\r\n    genCells().bombCounter\r\n  );\r\n  const [hesLost, setHesLost] = useState<boolean>(false);\r\n  const [hesWon, setHesWon] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const handleMouseDownAndUp = (e: any): void => {\r\n      if (!live) {\r\n        return;\r\n      }\r\n      let isButton: boolean = e.target.className\r\n        .toString()\r\n        .startsWith(\"Button\");\r\n      if (isButton) {\r\n        if (e.type === \"mouseup\") {\r\n          setFace(Face.smile);\r\n        } else if (e.type === \"mousedown\") {\r\n          setFace(Face.oh);\r\n        }\r\n      }\r\n    };\r\n    window.addEventListener(\"mouseup\", handleMouseDownAndUp);\r\n    window.addEventListener(\"mousedown\", handleMouseDownAndUp);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"mouseup\", handleMouseDownAndUp);\r\n      window.removeEventListener(\"mousedown\", handleMouseDownAndUp);\r\n    };\r\n  }, [live]);\r\n\r\n  useEffect(() => {\r\n    if (live && time < 999) {\r\n      const timer = setInterval(() => {\r\n        setTime(time + 1);\r\n      }, 1000);\r\n\r\n      return () => {\r\n        clearInterval(timer);\r\n      };\r\n    }\r\n  }, [live, time]);\r\n\r\n  const showAllBombs = useCallback((): Cell[][] => {\r\n    let currentCells = cells.slice();\r\n\r\n    return currentCells.map((row) =>\r\n      row.map((cell) => {\r\n        if (cell.value === CellValue.bomb && cell.state !== CellState.flagged) {\r\n          return { ...cell, state: CellState.visible };\r\n        }\r\n        return cell;\r\n      })\r\n    );\r\n  }, [cells]);\r\n\r\n  const showAllNotBombs = () => {\r\n    let currentCells = cells.slice();\r\n\r\n    return currentCells.map((row) =>\r\n      row.map((cell) => {\r\n        if (\r\n          cell.state !== CellState.visible &&\r\n          cell.state !== CellState.flagged\r\n        ) {\r\n          return { ...cell, state: CellState.visible };\r\n        }\r\n        return cell;\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (hesLost) {\r\n      let bombs = showAllBombs();\r\n      setCells(bombs);\r\n      setFace(Face.lost);\r\n      setLive(false);\r\n    }\r\n    if (hesWon) {\r\n      let bombs = showAllNotBombs();\r\n      setCells(bombs);\r\n      setFace(Face.won);\r\n      setLive(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [hesLost, hesWon]);\r\n\r\n  const checkBombsAroundMe = (row: number, col: number): boolean => {\r\n    let nFlags = 0;\r\n    // eslint-disable-next-line\r\n    let nBombs = 0;\r\n    let nFBombs = 0;\r\n    let nFBombsArr = [];\r\n\r\n    for (let i = 0; i < MAX_ROWS; i++) {\r\n      for (let j = 0; j < MAX_COLS; j++) {\r\n        if (i === row - 1 && j === col - 1) {\r\n          if (cells[i][j].state === CellState.flagged) {\r\n            nFlags++;\r\n          }\r\n          if (cells[i][j].value === CellValue.bomb) {\r\n            nBombs++;\r\n          }\r\n          if (\r\n            cells[i][j].value === CellValue.bomb &&\r\n            cells[i][j].state === CellState.flagged\r\n          ) {\r\n            nFBombsArr.push({ row: i, col: j });\r\n            nFBombs++;\r\n          }\r\n        }\r\n        if (i === row - 1 && j === col) {\r\n          if (cells[i][j].state === CellState.flagged) {\r\n            nFlags++;\r\n          }\r\n          if (cells[i][j].value === CellValue.bomb) {\r\n            nBombs++;\r\n          }\r\n          if (\r\n            cells[i][j].value === CellValue.bomb &&\r\n            cells[i][j].state === CellState.flagged\r\n          ) {\r\n            nFBombsArr.push({ row: i, col: j });\r\n            nFBombs++;\r\n          }\r\n        }\r\n        if (i === row - 1 && j === col + 1) {\r\n          if (cells[i][j].state === CellState.flagged) {\r\n            nFlags++;\r\n          }\r\n          if (cells[i][j].value === CellValue.bomb) {\r\n            nBombs++;\r\n          }\r\n          if (\r\n            cells[i][j].value === CellValue.bomb &&\r\n            cells[i][j].state === CellState.flagged\r\n          ) {\r\n            nFBombsArr.push({ row: i, col: j });\r\n            nFBombs++;\r\n          }\r\n        }\r\n        if (i === row && j === col - 1) {\r\n          if (cells[i][j].state === CellState.flagged) {\r\n            nFlags++;\r\n          }\r\n          if (cells[i][j].value === CellValue.bomb) {\r\n            nBombs++;\r\n          }\r\n          if (\r\n            cells[i][j].value === CellValue.bomb &&\r\n            cells[i][j].state === CellState.flagged\r\n          ) {\r\n            nFBombsArr.push({ row: i, col: j });\r\n            nFBombs++;\r\n          }\r\n        }\r\n        if (i === row && j === col + 1) {\r\n          if (cells[i][j].state === CellState.flagged) {\r\n            nFlags++;\r\n          }\r\n          if (cells[i][j].value === CellValue.bomb) {\r\n            nFBombsArr.push({ row: i, col: j });\r\n            nBombs++;\r\n          }\r\n          if (\r\n            cells[i][j].value === CellValue.bomb &&\r\n            cells[i][j].state === CellState.flagged\r\n          ) {\r\n            nFBombsArr.push({ row: i, col: j });\r\n            nFBombs++;\r\n          }\r\n        }\r\n        if (i === row + 1 && j === col - 1) {\r\n          if (cells[i][j].state === CellState.flagged) {\r\n            nFlags++;\r\n          }\r\n          if (cells[i][j].value === CellValue.bomb) {\r\n            nBombs++;\r\n          }\r\n          if (\r\n            cells[i][j].value === CellValue.bomb &&\r\n            cells[i][j].state === CellState.flagged\r\n          ) {\r\n            nFBombsArr.push({ row: i, col: j });\r\n            nFBombs++;\r\n          }\r\n        }\r\n        if (i === row + 1 && j === col) {\r\n          if (cells[i][j].state === CellState.flagged) {\r\n            nFlags++;\r\n          }\r\n          if (cells[i][j].value === CellValue.bomb) {\r\n            nBombs++;\r\n          }\r\n          if (\r\n            cells[i][j].value === CellValue.bomb &&\r\n            cells[i][j].state === CellState.flagged\r\n          ) {\r\n            nFBombsArr.push({ row: i, col: j });\r\n            nFBombs++;\r\n          }\r\n        }\r\n        if (i === row + 1 && j === col + 1) {\r\n          if (cells[i][j].state === CellState.flagged) {\r\n            nFlags++;\r\n          }\r\n          if (cells[i][j].value === CellValue.bomb) {\r\n            nBombs++;\r\n          }\r\n          if (\r\n            cells[i][j].value === CellValue.bomb &&\r\n            cells[i][j].state === CellState.flagged\r\n          ) {\r\n            nFBombsArr.push({ row: i, col: j });\r\n            nFBombs++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n    let nBingo = 0;\r\n\r\n    let distinct: any[] = [];\r\n    for (let i = 0; i < nFBombsArr.length; i++) {\r\n      if (distinct.indexOf(nFBombsArr[i]) === -1) {\r\n        distinct.push(nFBombsArr[i]);\r\n      }\r\n    }\r\n    nFBombsArr = distinct;\r\n\r\n    nFBombsArr.forEach((el) => {\r\n      if (\r\n        el.row === row - 1 &&\r\n        el.col === col - 1 &&\r\n        cells[row - 1][col - 1].state === CellState.flagged &&\r\n        cells[row][col].value !== CellValue.bomb &&\r\n        cells[row][col].value !== CellValue.none &&\r\n        cells[row][col].value === nFBombs\r\n      ) {\r\n        nBingo++;\r\n      }\r\n      if (\r\n        el.row === row - 1 &&\r\n        el.col === col &&\r\n        cells[row - 1][col].state === CellState.flagged &&\r\n        cells[row][col].value !== CellValue.bomb &&\r\n        cells[row][col].value !== CellValue.none &&\r\n        cells[row][col].value === nFBombs\r\n      ) {\r\n        nBingo++;\r\n      }\r\n      if (\r\n        el.row === row - 1 &&\r\n        el.col === col + 1 &&\r\n        cells[row - 1][col + 1].state === CellState.flagged &&\r\n        cells[row][col].value !== CellValue.bomb &&\r\n        cells[row][col].value !== CellValue.none &&\r\n        cells[row][col].value === nFBombs\r\n      ) {\r\n        nBingo++;\r\n      }\r\n      if (\r\n        el.row === row &&\r\n        el.col === col + 1 &&\r\n        cells[row][col + 1].state === CellState.flagged &&\r\n        cells[row][col].value !== CellValue.bomb &&\r\n        cells[row][col].value !== CellValue.none &&\r\n        cells[row][col].value === nFBombs\r\n      ) {\r\n        nBingo++;\r\n      }\r\n      if (\r\n        el.row === row &&\r\n        el.col === col - 1 &&\r\n        cells[row][col - 1].state === CellState.flagged &&\r\n        cells[row][col].value !== CellValue.bomb &&\r\n        cells[row][col].value !== CellValue.none &&\r\n        cells[row][col].value === nFBombs\r\n      ) {\r\n        nBingo++;\r\n      }\r\n      if (\r\n        el.row === row + 1 &&\r\n        el.col === col - 1 &&\r\n        cells[row + 1][col - 1].state === CellState.flagged &&\r\n        cells[row][col].value !== CellValue.bomb &&\r\n        cells[row][col].value !== CellValue.none &&\r\n        cells[row][col].value === nFBombs\r\n      ) {\r\n        nBingo++;\r\n      }\r\n      if (\r\n        el.row === row + 1 &&\r\n        el.col === col &&\r\n        cells[row + 1][col].state === CellState.flagged &&\r\n        cells[row][col].value !== CellValue.bomb &&\r\n        cells[row][col].value !== CellValue.none &&\r\n        cells[row][col].value === nFBombs\r\n      ) {\r\n        nBingo++;\r\n      }\r\n      if (\r\n        el.row === row + 1 &&\r\n        el.col === col + 1 &&\r\n        cells[row + 1][col + 1].state === CellState.flagged &&\r\n        cells[row][col].value !== CellValue.bomb &&\r\n        cells[row][col].value !== CellValue.none &&\r\n        cells[row][col].value === nFBombs\r\n      ) {\r\n        nBingo++;\r\n      }\r\n    });\r\n\r\n    let res = nFlags === cells[row][col].value;\r\n\r\n    return res;\r\n  };\r\n\r\n  const setVisibleAroundMe = (row: number, col: number): Cell[][] => {\r\n    let res = cells.slice();\r\n    if (checkBombsAroundMe(row, col)) {\r\n      if (\r\n        row - 1 >= 0 &&\r\n        col - 1 >= 0 &&\r\n        res[row - 1][col - 1].state !== CellState.visible &&\r\n        res[row - 1][col - 1].state !== CellState.flagged\r\n      ) {\r\n        handleCellClick(row - 1, col - 1, true)();\r\n      }\r\n      if (\r\n        row - 1 >= 0 &&\r\n        res[row - 1][col].state !== CellState.visible &&\r\n        res[row - 1][col].state !== CellState.flagged\r\n      ) {\r\n        handleCellClick(row - 1, col, true)();\r\n      }\r\n      if (\r\n        row - 1 >= 0 &&\r\n        col + 1 < MAX_COLS &&\r\n        res[row - 1][col + 1].state !== CellState.visible &&\r\n        res[row - 1][col + 1].state !== CellState.flagged\r\n      ) {\r\n        handleCellClick(row - 1, col + 1, true)();\r\n      }\r\n      if (\r\n        col - 1 >= 0 &&\r\n        res[row][col - 1].state !== CellState.visible &&\r\n        res[row][col - 1].state !== CellState.flagged\r\n      ) {\r\n        handleCellClick(row, col - 1, true)();\r\n      }\r\n      if (\r\n        col + 1 < MAX_COLS &&\r\n        res[row][col + 1].state !== CellState.visible &&\r\n        res[row][col + 1].state !== CellState.flagged\r\n      ) {\r\n        handleCellClick(row, col + 1, true)();\r\n      }\r\n      if (\r\n        row + 1 < MAX_ROWS &&\r\n        col - 1 >= 0 &&\r\n        res[row + 1][col - 1].state !== CellState.visible &&\r\n        res[row + 1][col - 1].state !== CellState.flagged\r\n      ) {\r\n        handleCellClick(row + 1, col - 1, true)();\r\n      }\r\n      if (\r\n        row + 1 < MAX_ROWS &&\r\n        res[row + 1][col].state !== CellState.visible &&\r\n        res[row + 1][col].state !== CellState.flagged\r\n      ) {\r\n        handleCellClick(row + 1, col, true)();\r\n      }\r\n      if (\r\n        row + 1 < MAX_ROWS &&\r\n        col + 1 < MAX_ROWS &&\r\n        res[row + 1][col + 1].state !== CellState.visible &&\r\n        res[row + 1][col + 1].state !== CellState.flagged\r\n      ) {\r\n        handleCellClick(row + 1, col + 1, true)();\r\n      }\r\n    }\r\n    return res;\r\n  };\r\n\r\n  const handleCellClick = (\r\n    rowParam: number,\r\n    colParam: number,\r\n    fromReval?: boolean\r\n  ) => (): void => {\r\n    if (\r\n      rowParam < 0 ||\r\n      colParam >= MAX_COLS ||\r\n      colParam < 0 ||\r\n      rowParam >= MAX_ROWS\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    let newCells: Cell[][] = cells.slice();\r\n    if (!live) {\r\n      // let isBomb = newCells[rowParam][colParam].value === CellValue.bomb;\r\n      // if (isBomb) {\r\n      //   newCells = gg(rowParam, colParam).slice();\r\n      // }\r\n      // while (isBomb) {\r\n      //   newCells = generateCells();\r\n      //   isBomb = newCells[rowParam][colParam].value === CellValue.bomb;\r\n      // }\r\n      setLive(true);\r\n    }\r\n\r\n    if (fromReval !== true) {\r\n      newCells = setVisibleAroundMe(rowParam, colParam);\r\n    }\r\n\r\n    const currentCell = newCells[rowParam][colParam];\r\n\r\n    if (currentCell.value === CellValue.bomb) {\r\n      setHesLost(true);\r\n      newCells[rowParam][colParam].red = true;\r\n      newCells[rowParam][colParam].state = CellState.visible;\r\n      newCells = showAllBombs();\r\n\r\n      setCells(newCells);\r\n      return;\r\n    } else if (currentCell.value === CellValue.none) {\r\n      newCells = openMultipleCells(cells, rowParam, colParam);\r\n    } else {\r\n      // Click on a number\r\n      newCells[rowParam][colParam].state = CellState.visible;\r\n    }\r\n    if (checkWin()) {\r\n      setHesWon(true);\r\n    }\r\n\r\n    setCells(newCells);\r\n  };\r\n\r\n  const getSafeOpenCellsExist = () => {\r\n    let numberOfOpenCells = 0;\r\n    let existNotOpenBombs = 0;\r\n    let wrongBombs = 0;\r\n\r\n    cells.forEach((rows) =>\r\n      rows.forEach((currentCell) => {\r\n        if (\r\n          currentCell.value !== CellValue.bomb &&\r\n          currentCell.state === CellState.open\r\n        ) {\r\n          numberOfOpenCells++;\r\n        }\r\n        if (\r\n          currentCell.value === CellValue.bomb &&\r\n          currentCell.state !== CellState.open &&\r\n          currentCell.state !== CellState.flagged\r\n        ) {\r\n          existNotOpenBombs++;\r\n        }\r\n        if (\r\n          currentCell.value !== CellValue.bomb &&\r\n          currentCell.state === CellState.flagged\r\n        ) {\r\n          wrongBombs++;\r\n        }\r\n      })\r\n    );\r\n\r\n    return { numberOfOpenCells, existNotOpenBombs, wrongBombs };\r\n  };\r\n\r\n  const checkWin = (): boolean => {\r\n    let res = false;\r\n    // console.log(getSafeOpenCellsExist());\r\n    if (getSafeOpenCellsExist().numberOfOpenCells === 0) {\r\n      res = true;\r\n    }\r\n    if (getSafeOpenCellsExist().wrongBombs > 0) {\r\n      res = false;\r\n    }\r\n    return res;\r\n  };\r\n\r\n  const handleCellRightClick = (rowParam: number, colParam: number) => (\r\n    e: React.MouseEvent<HTMLDivElement>\r\n  ): void => {\r\n    e.preventDefault();\r\n\r\n    if (!live) {\r\n      return;\r\n    }\r\n\r\n    const currentCells = cells.slice();\r\n    const currentCell = cells[rowParam][colParam];\r\n\r\n    if (currentCell.state !== CellState.visible) {\r\n      if (currentCells[rowParam][colParam].state !== CellState.flagged) {\r\n        currentCells[rowParam][colParam].state = CellState.flagged;\r\n        setCells(currentCells);\r\n        setBombCounter(bombCounter - 1);\r\n      } else {\r\n        currentCells[rowParam][colParam].state = CellState.open;\r\n        setCells(currentCells);\r\n        setBombCounter(bombCounter + 1);\r\n      }\r\n    }\r\n\r\n    if (checkWin()) {\r\n      setHesWon(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (getSafeOpenCellsExist().numberOfOpenCells > 0 && bombCounter === 0) {\r\n      setHesWon(true);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [bombCounter, cells]);\r\n\r\n  const renderCells = (): React.ReactNode => {\r\n    return cells.map((row, rowIndex) =>\r\n      row.map((cell, cellIndex) => {\r\n        return (\r\n          <Button\r\n            live={live}\r\n            hesDie={hesLost || hesWon}\r\n            key={`${rowIndex - cellIndex}`}\r\n            state={cell.state}\r\n            value={cell.value}\r\n            red={cell.red}\r\n            onClick={handleCellClick}\r\n            onContext={handleCellRightClick}\r\n            row={rowIndex}\r\n            col={cellIndex}\r\n          />\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFaceClick = (): void => {\r\n    setLive(false);\r\n    setTime(0);\r\n    setBombCounter(NO_OF_BOMBS);\r\n    setCells(generateCells());\r\n    setHesLost(false);\r\n    setHesWon(false);\r\n    setFace(Face.smile);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: `${55 + 30 * MAX_COLS}px`,\r\n        height: `${145 + 30 * MAX_ROWS}px`,\r\n      }}\r\n      className=\"Minesweeper\"\r\n    >\r\n      <div className=\"Header\">\r\n        <NumberDisplay value={bombCounter} />\r\n        <div className=\"Face\">\r\n          <span role=\"img\" aria-label=\"face\" onClick={handleFaceClick}>\r\n            {face}\r\n          </span>\r\n        </div>\r\n        <NumberDisplay value={time} />\r\n      </div>\r\n      <div\r\n        className=\"Body\"\r\n        style={{\r\n          gridTemplateColumns: `repeat(${MAX_COLS}, 1fr)`,\r\n          gridTemplateRows: `repeat(${MAX_ROWS}, 1fr)`,\r\n        }}\r\n      >\r\n        {renderCells()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Space, Table, Typography } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { ColumnsType } from \"antd/lib/table\";\r\n// type masterType = { time: number; date: string };\r\ntype masterType = { time: number; date: string; owner: string };\r\n// type dataSourceType = { time: number; date: string; key: number };\r\ntype dataSourceType = {\r\n  owner: string;\r\n  time: number;\r\n  date: string;\r\n  key: number;\r\n};\r\n\r\ntype FilterFieldsType = {\r\n  text: string;\r\n  value: string;\r\n  children?: {\r\n    text: string;\r\n    value: string;\r\n  }[];\r\n};\r\n\r\ninterface Table2Props {\r\n  ownerId?: string;\r\n  ownerName: string;\r\n}\r\n\r\nconst Table2: React.FC<Table2Props> = ({ ownerId = \"\", ownerName }) => {\r\n  const [data, setData] = useState<masterType[]>([]);\r\n  const [filterFields, setFilterFields] = useState<FilterFieldsType[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [sortTime, setSortTime] = useState<\"descend\" | \"ascend\" | null>(null);\r\n\r\n  useEffect(() => {\r\n    // getGamesById(ownerId);\r\n    getAllGames();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // console.log(getFF());\r\n\r\n  const getAllGames = () => {\r\n    axios\r\n      .get(`/api`)\r\n      .then((response) => {\r\n        const allGames: masterType[] = response.data;\r\n\r\n        let newData: masterType[] = [];\r\n        let newFilterFields: FilterFieldsType[] = [];\r\n        allGames.forEach((el: any) => {\r\n          el.games.forEach((game: any) => {\r\n            let gameToAdd: masterType = {\r\n              time: game.time,\r\n              date: game.date,\r\n              owner: el.owner,\r\n            };\r\n            newData.push(gameToAdd);\r\n            let newFf: FilterFieldsType = { text: el.owner, value: el.owner };\r\n            let indexOfStevie = newFilterFields.findIndex(\r\n              (i) => i.value === newFf.value\r\n            );\r\n            if (indexOfStevie === -1) {\r\n              newFilterFields.push(newFf);\r\n            }\r\n          });\r\n        });\r\n\r\n        setData(newData);\r\n        setFilterFields(newFilterFields);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        alert(\"Error retrieving data!!!\");\r\n      });\r\n  };\r\n\r\n  // eslint-disable-next-line\r\n  const getGamesById = (ownerId: string = \"609580eb5a5d3a17c8002231\") => {\r\n    axios\r\n      .get(`/api?id=${ownerId}`)\r\n      .then((response) => {\r\n        const gamesForId: masterType[] = response.data.games;\r\n\r\n        // gamesForId.sort((a, b) => a.time - b.time);\r\n\r\n        setData([...gamesForId, ...gamesForId, ...gamesForId, ...gamesForId]);\r\n        setLoading(false);\r\n        console.log(gamesForId);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        alert(\"Error retrieving data!!!\");\r\n      });\r\n  };\r\n\r\n  const fff = (): string[] | undefined => {\r\n    // console.log(ownerName);\r\n    // if (ownerName) {\r\n    //   return [ownerName];\r\n    // } else {\r\n    //   return undefined;\r\n    // }\r\n    return [ownerName];\r\n  };\r\n  console.log(fff());\r\n\r\n  const columns: ColumnsType<dataSourceType> = [\r\n    {\r\n      title: \"No\",\r\n      dataIndex: \"key\",\r\n      key: \"key\",\r\n      width: 60,\r\n    },\r\n    {\r\n      title: \"Person\",\r\n      dataIndex: \"owner\",\r\n      key: \"owner\",\r\n      filters: filterFields,\r\n      onFilter: (value: any, record: any) => {\r\n        return value === record.owner;\r\n      },\r\n      defaultFilteredValue: fff(),\r\n    },\r\n    {\r\n      title: \"Time\",\r\n      dataIndex: \"time\",\r\n      key: \"time\",\r\n      sorter: (a: masterType, b: masterType) => a.time - b.time,\r\n      sortOrder: sortTime,\r\n    },\r\n    {\r\n      title: \"Date\",\r\n      dataIndex: \"date\",\r\n      key: \"date\",\r\n    },\r\n  ];\r\n\r\n  let dataSource: dataSourceType[] = data.map((el, elIndex) => ({\r\n    key: elIndex + 1,\r\n    time: el.time,\r\n    date: el.date,\r\n    owner: el.owner,\r\n  }));\r\n\r\n  const onChange = (a1: any, a2: any, a3: any, a4: any) => {\r\n    if (a4.action === \"sort\") {\r\n      if (sortTime === \"descend\") setSortTime(null);\r\n      if (sortTime === \"ascend\") setSortTime(\"descend\");\r\n      if (sortTime === null) setSortTime(\"ascend\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"600px\",\r\n        height: \"660px\",\r\n        // borderWidth: \"2px\",\r\n        // borderColor: \"black\",\r\n        // borderStyle: \"solid\",\r\n      }}\r\n    >\r\n      <Table\r\n        title={() => {\r\n          return (\r\n            <Space\r\n              style={{ width: \"100%\" }}\r\n              align=\"center\"\r\n              direction=\"vertical\"\r\n            >\r\n              <Typography.Text>Hi</Typography.Text>\r\n            </Space>\r\n          );\r\n        }}\r\n        showSorterTooltip={false}\r\n        loading={loading}\r\n        bordered={true}\r\n        dataSource={dataSource}\r\n        columns={columns}\r\n        // scroll={{ y: 110 }}\r\n        size=\"large\"\r\n        onChange={onChange}\r\n        pagination={{ position: [\"bottomCenter\"], size: \"small\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table2;\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport ExportAndImport from \"./ExportAndImport\";\r\nimport Minesweeper from \"./Minesweeper\";\r\nimport Table2 from \"./Table\";\r\n\r\nexport default function App() {\r\n  const getAllGames = () => {\r\n    console.log(\"log game:\");\r\n    axios\r\n      .get(\"/api\")\r\n      .then((response) => {\r\n        const data = response.data;\r\n        console.log(data);\r\n        // data.forEach((data: any) => {\r\n        //   // console.log(data);\r\n        //   alert(`${data.owner} have ${data.games.length} games!`);\r\n        // });\r\n      })\r\n      .catch(() => {\r\n        alert(\"Error retrieving data!!!\");\r\n      });\r\n  };\r\n\r\n  const getGamesById = () => {\r\n    let ownerId = \"609580eb5a5d3a17c8002231\";\r\n    axios\r\n      .get(`/api?id=${ownerId}`)\r\n      .then((response) => {\r\n        const gamesForId = response.data.games;\r\n        console.log(gamesForId);\r\n      })\r\n      .catch(() => {\r\n        alert(\"Error retrieving data!!!\");\r\n      });\r\n  };\r\n\r\n  const testServer = () => {\r\n    axios\r\n      .get(\"/api\")\r\n      .then((response) => {\r\n        const data = response.data;\r\n        data.forEach((data: any) => {\r\n          alert(`${data.owner} have ${data.games.length} games!`);\r\n        });\r\n      })\r\n      .catch(() => {\r\n        alert(\"Error retrieving data!!!\");\r\n      });\r\n  };\r\n\r\n  // eslint-disable-next-line\r\n  const submit = () => {\r\n    const oneGame = {\r\n      time: 10,\r\n      date: new Date(),\r\n    };\r\n    const twoGame = {\r\n      time: 20,\r\n      date: new Date(),\r\n    };\r\n    const allGames = [oneGame, twoGame];\r\n\r\n    const payload = {\r\n      owner: \"rame\",\r\n      games: allGames,\r\n    };\r\n\r\n    axios({\r\n      url: \"/api/save\",\r\n      method: \"POST\",\r\n      data: payload,\r\n    })\r\n      .then(() => {\r\n        testServer();\r\n      })\r\n      .catch((err) => {\r\n        alert(`Error ${err}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        // width: \"200%\",\r\n        // height: \"100%\",\r\n        // background: \"green\",\r\n      }}\r\n    >\r\n      <div\r\n        style={\r\n          {\r\n            // display: \"flex\",\r\n            // width: \"50%\",\r\n            // flexDirection: \"column\",\r\n            // justifyContent: \"space-between\",\r\n            // alignItems: \"center\",\r\n          }\r\n        }\r\n      >\r\n        <ExportAndImport />\r\n        <button onClick={getAllGames}>gag</button>\r\n        <button onClick={getGamesById}>gag by id</button>\r\n      </div>\r\n      <Minesweeper />\r\n      <Table2 ownerName=\"rame\" />\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n// import App from \"../../client2/src/components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}